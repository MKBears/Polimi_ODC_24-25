


Gadgets
=======


0x0000000000401492: adc byte ptr [rcx], al; add byte ptr [rax], al; mov edi, 0x401d46; call 0x910; leave; ret; 
0x0000000000402317: add al, bl; in eax, 0xff; jmp qword ptr [rax + 1]; 
0x00000000004012c4: add al, bpl; idiv r15b; dec ecx; ret; 
0x00000000004012dc: add al, bpl; sub eax, 0xbffffff6; ret 0x401b; 
0x0000000000400b80: add al, byte ptr [rax]; add byte ptr [rax], bh; leave; ret; 
0x0000000000400ecd: add al, ch; cmp esi, 0x8948ffff; ret 0x458b; 
0x00000000004012c5: add al, ch; idiv r15b; dec ecx; ret; 
0x000000000040123d: add al, ch; or eax, 0xc9fffff7; ret; 
0x0000000000400b7d: add al, ch; sub eax, 0xb8000002; add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x00000000004012dd: add al, ch; sub eax, 0xbffffff6; ret 0x401b; 
0x000000000040166f: add bl, dh; ret; 
0x00000000004012da: add byte ptr [rax + rax*2], bl; add al, ch; sub eax, 0xbffffff6; ret 0x401b; 
0x0000000000400b44: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call rax; 
0x0000000000402315: add byte ptr [rax], al; add al, bl; in eax, 0xff; jmp qword ptr [rax + 1]; 
0x0000000000400ecb: add byte ptr [rax], al; add al, ch; cmp esi, 0x8948ffff; ret 0x458b; 
0x000000000040123b: add byte ptr [rax], al; add al, ch; or eax, 0xc9fffff7; ret; 
0x000000000040166d: add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400b42: add byte ptr [rax], al; add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call rax; 
0x000000000040166b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x000000000040123a: add byte ptr [rax], al; add byte ptr [rax], al; call 0x950; leave; ret; 
0x0000000000400b84: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x00000000004012bd: add byte ptr [rax], al; add byte ptr [rax], al; mov edi, 0x401bf2; call 0x910; leave; ret; 
0x0000000000400abc: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x00000000004012be: add byte ptr [rax], al; add byte ptr [rdi + 0x401bf2], bh; call 0x910; leave; ret; 
0x00000000004015ec: add byte ptr [rax], al; add byte ptr [rdi + 0x402212], bh; call 0x910; nop; leave; ret; 
0x0000000000400b85: add byte ptr [rax], al; add cl, cl; ret; 
0x00000000004008e3: add byte ptr [rax], al; add rsp, 8; ret; 
0x000000000040123c: add byte ptr [rax], al; call 0x950; leave; ret; 
0x0000000000400beb: add byte ptr [rax], al; call 0x980; nop; pop rbp; ret; 
0x0000000000401370: add byte ptr [rax], al; call 0x990; mov edi, 0x401c69; call 0x910; leave; ret; 
0x0000000000400da3: add byte ptr [rax], al; call 0xa20; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000400b7c: add byte ptr [rax], al; call 0xdb0; mov eax, 0; leave; ret; 
0x0000000000400d49: add byte ptr [rax], al; je 0xd52; call 0x940; leave; ret; 
0x0000000000400fe6: add byte ptr [rax], al; je 0xfef; call 0x940; leave; ret; 
0x0000000000400b86: add byte ptr [rax], al; leave; ret; 
0x0000000000400b81: add byte ptr [rax], al; mov eax, 0; leave; ret; 
0x00000000004012bf: add byte ptr [rax], al; mov edi, 0x401bf2; call 0x910; leave; ret; 
0x0000000000401494: add byte ptr [rax], al; mov edi, 0x401d46; call 0x910; leave; ret; 
0x00000000004015ed: add byte ptr [rax], al; mov edi, 0x402212; call 0x910; nop; leave; ret; 
0x0000000000400abe: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000401672: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000400aa8: add byte ptr [rax], al; test rax, rax; je 0xac0; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400af6: add byte ptr [rax], al; test rax, rax; je 0xb08; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400b43: add byte ptr [rax], al; test rax, rax; je 0xb3b; push rbp; mov rbp, rsp; call rax; 
0x0000000000401238: add byte ptr [rax], bh; call 0x950; leave; ret; 
0x0000000000400b82: add byte ptr [rax], bh; leave; ret; 
0x0000000000401237: add byte ptr [rax], dil; call 0x950; leave; ret; 
0x00000000004012c0: add byte ptr [rdi + 0x401bf2], bh; call 0x910; leave; ret; 
0x0000000000401495: add byte ptr [rdi + 0x401d46], bh; call 0x910; leave; ret; 
0x00000000004015ee: add byte ptr [rdi + 0x402212], bh; call 0x910; nop; leave; ret; 
0x0000000000400b87: add cl, cl; ret; 
0x0000000000400da1: add dword ptr [rax], eax; add byte ptr [rax], al; call 0xa20; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401493: add dword ptr [rax], eax; add byte ptr [rdi + 0x401d46], bh; call 0x910; leave; ret; 
0x00000000004013d3: add dword ptr [rbp - 4], 1; cmp dword ptr [rbp - 4], 0xf; jbe 0x13a2; nop; leave; ret; 
0x0000000000400b24: add eax, 0x2025de; add ebx, esi; ret; 
0x00000000004008d6: add eax, 0x20271d; test rax, rax; je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x0000000000401095: add eax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x0000000000400fe9: add eax, 0xfff951e8; dec ecx; ret; 
0x0000000000400d4c: add eax, 0xfffbeee8; dec ecx; ret; 
0x0000000000400b29: add ebx, esi; ret; 
0x0000000000400f72: add esp, 0x48; pop rbx; pop rbp; ret; 
0x00000000004008e6: add esp, 8; ret; 
0x0000000000401094: add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x0000000000400f71: add rsp, 0x48; pop rbx; pop rbp; ret; 
0x00000000004008e5: add rsp, 8; ret; 
0x00000000004015f1: and al, byte ptr [rax]; call 0x910; nop; leave; ret; 
0x0000000000400b27: and byte ptr [rax], al; add ebx, esi; ret; 
0x00000000004008d9: and byte ptr [rax], al; test rax, rax; je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x00000000004015a3: and dword ptr [rax], eax; mov eax, 0; call 0x950; leave; ret; 
0x0000000000400d46: and eax, 0x28; je 0xd52; call 0x940; leave; ret; 
0x0000000000400fe3: and eax, 0x28; je 0xfef; call 0x940; leave; ret; 
0x0000000000400b26: and eax, 0xf3010020; ret; 
0x00000000004012d8: call 0x401c139c; add al, ch; sub eax, 0xbffffff6; ret 0x401b; 
0x00000000004012c6: call 0x910; leave; ret; 
0x0000000000401040: call 0x910; mov edi, 0x401a0e; call 0x910; nop; pop rbp; ret; 
0x00000000004015f4: call 0x910; nop; leave; ret; 
0x000000000040104a: call 0x910; nop; pop rbp; ret; 
0x0000000000400f6c: call 0x940; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000400d4d: call 0x940; leave; ret; 
0x000000000040123e: call 0x950; leave; ret; 
0x0000000000400bed: call 0x980; nop; pop rbp; ret; 
0x0000000000401372: call 0x990; mov edi, 0x401c69; call 0x910; leave; ret; 
0x0000000000400be3: call 0x9f0; mov edi, 0x3c; call 0x980; nop; pop rbp; ret; 
0x0000000000400da5: call 0xa20; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000400d9b: call 0xa30; mov edi, 1; call 0xa20; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004008e0: call 0xa50; add rsp, 8; ret; 
0x0000000000400b7e: call 0xdb0; mov eax, 0; leave; ret; 
0x0000000000400b21: call ptr [rbp - 0x3a]; add eax, 0x2025de; add ebx, esi; ret; 
0x00000000004024eb: call qword ptr [rax]; 
0x0000000000400b55: call qword ptr [rbp + 0x48]; 
0x0000000000400b4e: call rax; 
0x0000000000400dad: clc; leave; ret; 
0x000000000040108f: clc; shl rax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x00000000004013d9: cld; pcmpeqd mm0, mm5; nop; leave; ret; 
0x0000000000400be9: cmp al, 0; add byte ptr [rax], al; call 0x980; nop; pop rbp; ret; 
0x00000000004013d7: cmp dword ptr [rbp - 4], 0xf; jbe 0x13a2; nop; leave; ret; 
0x0000000000400ecf: cmp esi, 0x8948ffff; ret 0x458b; 
0x0000000000400da9: dec dword ptr [rax - 0x75]; clc; leave; ret; 
0x0000000000400ed2: dec dword ptr [rax - 0x77]; ret 0x458b; 
0x0000000000401478: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000400d51: dec ecx; ret; 
0x0000000000400b25: fisub word ptr [rip - 0xcfeffe0]; ret; 
0x000000000040164c: fmul qword ptr [rax - 0x7d]; ret; 
0x00000000004012c8: idiv bh; dec ecx; ret; 
0x0000000000401240: idiv edi; dec ecx; ret; 
0x00000000004012c7: idiv r15b; dec ecx; ret; 
0x0000000000402319: in eax, 0xff; jmp qword ptr [rax + 1]; 
0x00000000004013d2: inc dword ptr [rbx - 0x7cfe03bb]; jge 0x13d6; pcmpeqd mm0, mm5; nop; leave; ret; 
0x0000000000400b49: int1; push rbp; mov rbp, rsp; call rax; 
0x000000000040108a: ja 0x1101; mov rax, qword ptr [rbp - 8]; shl rax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x00000000004013db: jbe 0x13a2; nop; leave; ret; 
0x00000000004008de: je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x0000000000400aad: je 0xac0; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400afb: je 0xb08; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400b48: je 0xb3b; push rbp; mov rbp, rsp; call rax; 
0x0000000000400d4b: je 0xd52; call 0x940; leave; ret; 
0x0000000000400f6a: je 0xf71; call 0x940; add rsp, 0x48; pop rbx; pop rbp; ret; 
0x0000000000400fe8: je 0xfef; call 0x940; leave; ret; 
0x00000000004013d8: jge 0x13d6; pcmpeqd mm0, mm5; nop; leave; ret; 
0x000000000040231b: jmp qword ptr [rax + 1]; 
0x000000000040252b: jmp qword ptr [rbp]; 
0x000000000040240b: jmp qword ptr [rcx]; 
0x0000000000400ab5: jmp rax; 
0x000000000040108b: jne 0x10d5; mov eax, dword ptr [rbp - 8]; shl rax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x0000000000400b88: leave; ret; 
0x00000000004015a2: lock and dword ptr [rax], eax; mov eax, 0; call 0x950; leave; ret; 
0x0000000000401239: mov eax, 0; call 0x950; leave; ret; 
0x0000000000400b83: mov eax, 0; leave; ret; 
0x000000000040109b: mov eax, dword ptr [rax]; jmp rax; 
0x0000000000400dab: mov eax, dword ptr [rbp - 8]; leave; ret; 
0x000000000040108d: mov eax, dword ptr [rbp - 8]; shl rax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x00000000004008d5: mov eax, dword ptr [rip + 0x20271d]; test rax, rax; je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x0000000000400b4c: mov ebp, esp; call rax; 
0x0000000000400be8: mov edi, 0x3c; call 0x980; nop; pop rbp; ret; 
0x0000000000401045: mov edi, 0x401a0e; call 0x910; nop; pop rbp; ret; 
0x0000000000401234: mov edi, 0x401b68; mov eax, 0; call 0x950; leave; ret; 
0x00000000004012c1: mov edi, 0x401bf2; call 0x910; leave; ret; 
0x0000000000401377: mov edi, 0x401c69; call 0x910; leave; ret; 
0x0000000000401496: mov edi, 0x401d46; call 0x910; leave; ret; 
0x00000000004015a1: mov edi, 0x4021f0; mov eax, 0; call 0x950; leave; ret; 
0x00000000004015ef: mov edi, 0x402212; call 0x910; nop; leave; ret; 
0x0000000000400ab0: mov edi, 0x6030d0; jmp rax; 
0x0000000000400da0: mov edi, 1; call 0xa20; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000401232: mov esi, eax; mov edi, 0x401b68; mov eax, 0; call 0x950; leave; ret; 
0x000000000040159f: mov esi, eax; mov edi, 0x4021f0; mov eax, 0; call 0x950; leave; ret; 
0x000000000040109a: mov rax, qword ptr [rax]; jmp rax; 
0x0000000000400daa: mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040108c: mov rax, qword ptr [rbp - 8]; shl rax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x00000000004008d4: mov rax, qword ptr [rip + 0x20271d]; test rax, rax; je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x0000000000400b4b: mov rbp, rsp; call rax; 
0x000000000040159e: mov rsi, rax; mov edi, 0x4021f0; mov eax, 0; call 0x950; leave; ret; 
0x0000000000400ab8: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000400b05: nop dword ptr [rax]; pop rbp; ret; 
0x0000000000400ab7: nop word ptr [rax + rax]; pop rbp; ret; 
0x0000000000401111: nop; leave; ret; 
0x0000000000400bf2: nop; pop rbp; ret; 
0x00000000004012bc: or byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rdi + 0x401bf2], bh; call 0x910; leave; ret; 
0x0000000000401089: or byte ptr [rdi + 0x75], dh; mov rax, qword ptr [rbp - 8]; shl rax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x000000000040123f: or eax, 0xc9fffff7; ret; 
0x00000000004013da: pcmpeqd mm0, mm5; nop; leave; ret; 
0x000000000040165c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040165e: pop r13; pop r14; pop r15; ret; 
0x0000000000401660: pop r14; pop r15; ret; 
0x0000000000401662: pop r15; ret; 
0x0000000000400aaf: pop rbp; mov edi, 0x6030d0; jmp rax; 
0x000000000040165b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040165f: pop rbp; pop r14; pop r15; ret; 
0x0000000000400ac0: pop rbp; ret; 
0x0000000000400f75: pop rbx; pop rbp; ret; 
0x0000000000401663: pop rdi; ret; 
0x0000000000401661: pop rsi; pop r15; ret; 
0x000000000040165d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000401235: push -0x47ffbfe5; add byte ptr [rax], al; add byte ptr [rax], al; call 0x950; leave; ret; 
0x0000000000400b4a: push rbp; mov rbp, rsp; call rax; 
0x000000000040242c: ret 0; 
0x00000000004009a2: ret 0x2026; 
0x000000000040125c: ret 0x401b; 
0x0000000000400ed5: ret 0x458b; 
0x0000000000401208: ret 0x4810; 
0x000000000040147b: ret 0x8b48; 
0x00000000004008e9: ret; 
0x0000000000400b47: sal byte ptr [rcx + rsi*8 + 0x55], 0x48; mov ebp, esp; call rax; 
0x00000000004012db: sbb al, 0x40; add al, ch; sub eax, 0xbffffff6; ret 0x401b; 
0x0000000000401047: sbb al, byte ptr [rax]; call 0x910; nop; pop rbp; ret; 
0x0000000000401097: sbb al, byte ptr [rax]; mov rax, qword ptr [rax]; jmp rax; 
0x00000000004008d7: sbb eax, 0x48002027; test eax, eax; je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x00000000004012c3: sbb eax, dword ptr [rax]; call 0x910; leave; ret; 
0x0000000000401236: sbb eax, dword ptr [rax]; mov eax, 0; call 0x950; leave; ret; 
0x0000000000401091: shl eax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x0000000000401090: shl rax, 3; add rax, 0x401a30; mov rax, qword ptr [rax]; jmp rax; 
0x0000000000400d47: sub byte ptr [rax], al; add byte ptr [rax], al; je 0xd52; call 0x940; leave; ret; 
0x0000000000400fe4: sub byte ptr [rax], al; add byte ptr [rax], al; je 0xfef; call 0x940; leave; ret; 
0x0000000000400b7f: sub eax, 0xb8000002; add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x00000000004012df: sub eax, 0xbffffff6; ret 0x401b; 
0x0000000000401675: sub esp, 8; add rsp, 8; ret; 
0x0000000000401674: sub rsp, 8; add rsp, 8; ret; 
0x0000000000400aba: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x00000000004008dc: test eax, eax; je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x0000000000400aab: test eax, eax; je 0xac0; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400af9: test eax, eax; je 0xb08; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400b46: test eax, eax; je 0xb3b; push rbp; mov rbp, rsp; call rax; 
0x00000000004008db: test rax, rax; je 0x8e5; call 0xa50; add rsp, 8; ret; 
0x0000000000400aaa: test rax, rax; je 0xac0; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400af8: test rax, rax; je 0xb08; pop rbp; mov edi, 0x6030d0; jmp rax; 
0x0000000000400b45: test rax, rax; je 0xb3b; push rbp; mov rbp, rsp; call rax; 
0x0000000000400ab2: xor byte ptr [rax], ah; jmp rax; 

206 gadgets found
